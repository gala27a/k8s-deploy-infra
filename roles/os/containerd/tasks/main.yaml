---

- name: Check Continerd file exists
  ansible.builtin.stat:
    path: /usr/local/bin/containerd 
  register: containerd_check

- name: Check Continerd service exists
  ansible.builtin.stat:
    path: /etc/systemd/system/containerd.service
  register: containerd_service_check

- name: Download Continerd_ver={{ containerd_ver }}
  ansible.builtin.unarchive:
    src: https://github.com/containerd/containerd/releases/download/v{{ containerd_ver }}/containerd-{{ containerd_ver }}-linux-amd64.tar.gz
    dest: /usr/local
    remote_src: yes
  when: containerd_check.stat.exists == false
  timeout: 40

- name: Get service Continerd
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/containerd/containerd/main/containerd.service
    dest: /etc/systemd/system/containerd.service
  when: containerd_service_check.stat.exists == false
  notify: 
    - Systemd daemon_reload
    - Restart Continerd

- name: Create directory /etc/containerd
  ansible.builtin.file:
    path: /etc/containerd
    state: directory

- name: Copy default config containerd
  ansible.builtin.copy:
    src: containerd-config.toml
    dest: /etc/containerd/config.toml
    force: false

- name: Change line SystemdCgroup in containerd config
  ansible.builtin.lineinfile:
    path: /etc/containerd/config.toml
    regexp:  SystemdCgroup = false
    line:  "            SystemdCgroup = true"
  notify: Restart Continerd

- name: Download runc
  ansible.builtin.get_url:
    url: https://github.com/opencontainers/runc/releases/download/v{{ runc_ver }}/runc.amd64
    dest: /usr/local/sbin/runc
    mode: '0755'
    timeout: 30

- name: Create CNI directory
  ansible.builtin.file:
    path: /opt/cni/bin/
    state: directory

- name: Download CNI Plugins
  ansible.builtin.unarchive:
    src: https://github.com/containernetworking/plugins/releases/download/v{{ cni_ver }}/cni-plugins-linux-amd64-v{{ cni_ver }}.tgz
    dest: /opt/cni/bin
    remote_src: yes
    owner: root
    group: root
  timeout: 40

- name: Start containerd service
  ansible.builtin.service:
    name: containerd
    enabled: true
    state: started